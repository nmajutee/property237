# Generated by Django 5.2.4 on 2025-08-15 17:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "phone_number",
                    models.CharField(
                        help_text="Cameroon phone number format: +237XXXXXXXXX",
                        max_length=13,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid Cameroon phone number: +237XXXXXXXXX",
                                regex="^\\+237[67]\\d{8}$",
                            )
                        ],
                    ),
                ),
                (
                    "whatsapp_number",
                    models.CharField(
                        blank=True,
                        help_text="WhatsApp number (can be different from main phone)",
                        max_length=13,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid Cameroon phone number: +237XXXXXXXXX",
                                regex="^\\+237[67]\\d{8}$",
                            )
                        ],
                    ),
                ),
                (
                    "preferred_contact_method",
                    models.CharField(
                        choices=[
                            ("whatsapp", "WhatsApp"),
                            ("calls", "Calls Only"),
                            ("both", "WhatsApp & Calls"),
                        ],
                        default="both",
                        max_length=10,
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("client", "Property Seeker"),
                            ("landlord", "Landlord"),
                            ("agent", "Real Estate Agent"),
                            ("admin", "Admin"),
                        ],
                        default="client",
                        max_length=10,
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(blank=True, null=True, upload_to="profile_pics/"),
                ),
                ("address", models.TextField(blank=True)),
                ("is_phone_verified", models.BooleanField(default=False)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("is_kyc_verified", models.BooleanField(default=False)),
                ("verification_date", models.DateTimeField(blank=True, null=True)),
                (
                    "company_name",
                    models.CharField(
                        blank=True, help_text="Company/Agency name", max_length=200
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True, help_text="e.g., Papa Immo", max_length=100
                    ),
                ),
                ("id_card_number", models.CharField(blank=True, max_length=50)),
                (
                    "id_card_front",
                    models.ImageField(
                        blank=True, null=True, upload_to="kyc_documents/"
                    ),
                ),
                (
                    "id_card_back",
                    models.ImageField(
                        blank=True, null=True, upload_to="kyc_documents/"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_suspended", models.BooleanField(default=False)),
                ("suspension_reason", models.TextField(blank=True)),
                ("date_joined", models.DateTimeField(auto_now_add=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        help_text="Primary city location",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="locations.city",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserPreferences",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                ("sms_notifications", models.BooleanField(default=False)),
                ("whatsapp_notifications", models.BooleanField(default=True)),
                ("property_alerts", models.BooleanField(default=True)),
                ("price_drop_alerts", models.BooleanField(default=True)),
                ("newsletter_subscription", models.BooleanField(default=False)),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[("en", "English"), ("fr", "French")],
                        default="en",
                        max_length=2,
                    ),
                ),
                ("preferred_currency", models.CharField(default="XAF", max_length=3)),
                (
                    "max_budget",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum budget for property alerts",
                        max_digits=12,
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "preferred_areas",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Preferred areas for property alerts",
                        to="locations.area",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserVerification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "verification_type",
                    models.CharField(
                        choices=[
                            ("phone", "Phone Verification"),
                            ("email", "Email Verification"),
                            ("kyc", "KYC Verification"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("expired", "Expired"),
                        ],
                        default="pending",
                        max_length=10,
                    ),
                ),
                ("verification_code", models.CharField(blank=True, max_length=10)),
                ("submitted_at", models.DateTimeField(auto_now_add=True)),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("rejection_reason", models.TextField(blank=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_verifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="verifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-submitted_at"],
            },
        ),
    ]
