# Generated by Django 5.0.8 on 2025-09-19 10:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('license_expiry', models.DateField(blank=True, null=True)),
                ('agency_name', models.CharField(blank=True, max_length=100)),
                ('agency_address', models.TextField(blank=True)),
                ('years_experience', models.CharField(blank=True, choices=[('0-1', '0-1 years'), ('1-3', '1-3 years'), ('3-5', '3-5 years'), ('5-10', '5-10 years'), ('10+', '10+ years')], max_length=10)),
                ('specialization', models.CharField(blank=True, choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('luxury', 'Luxury Properties'), ('rental', 'Rental Properties'), ('investment', 'Investment Properties'), ('land', 'Land & Development')], max_length=20)),
                ('office_phone', models.CharField(blank=True, max_length=17)),
                ('website', models.URLField(blank=True)),
                ('linkedin_profile', models.URLField(blank=True)),
                ('facebook_profile', models.URLField(blank=True)),
                ('instagram_profile', models.URLField(blank=True)),
                ('bio', models.TextField(help_text='Professional biography and experience')),
                ('languages_spoken', models.CharField(blank=True, help_text='Comma-separated languages', max_length=200)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('total_sales', models.PositiveIntegerField(default=0)),
                ('total_rentals', models.PositiveIntegerField(default=0)),
                ('client_rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_areas', models.ManyToManyField(blank=True, related_name='agents_list', to='locations.area')),
                ('user', models.OneToOneField(limit_choices_to={'user_type': 'agent'}, on_delete=django.db.models.deletion.CASCADE, related_name='agents_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-is_featured', '-client_rating'],
            },
        ),
        migrations.CreateModel(
            name='AgentMobileMoney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('mtn', 'MTN Mobile Money'), ('orange', 'Orange Money'), ('other', 'Other')], max_length=10)),
                ('phone_number', models.CharField(max_length=13, validators=[django.core.validators.RegexValidator(message='Enter a valid Cameroon phone number: +237XXXXXXXXX', regex='^\\+237[67]\\d{8}$')])),
                ('account_name', models.CharField(help_text='Name on mobile money account', max_length=100)),
                ('name_match_status', models.CharField(choices=[('pending', 'Pending'), ('match', 'Match'), ('close', 'Close Match'), ('mismatch', 'Mismatch')], default='pending', max_length=10)),
                ('is_verified', models.BooleanField(default=False)),
                ('verification_code', models.CharField(blank=True, max_length=10)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mobile_money', to='agents.agentprofile')),
            ],
            options={
                'verbose_name': 'Agent Mobile Money',
                'verbose_name_plural': 'Agent Mobile Money Accounts',
            },
        ),
        migrations.CreateModel(
            name='AgentContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('phone_number', models.CharField(blank=True, max_length=17)),
                ('preferred_contact_method', models.CharField(choices=[('email', 'Email'), ('phone', 'Phone'), ('whatsapp', 'WhatsApp')], default='email', max_length=10)),
                ('status', models.CharField(choices=[('new', 'New'), ('contacted', 'Contacted'), ('in_progress', 'In Progress'), ('closed', 'Closed')], default='new', max_length=15)),
                ('agent_response', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents_contacts', to=settings.AUTH_USER_MODEL)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inquiries', to='agents.agentprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('issuing_organization', models.CharField(max_length=100)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('certificate_number', models.CharField(blank=True, max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='agents.agentprofile')),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='AgentAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=200)),
                ('city', models.CharField(max_length=100)),
                ('region', models.CharField(help_text='Region/State', max_length=100)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='CM', help_text='Country (ISO code)', max_length=2)),
                ('is_business_address_same', models.BooleanField(default=False, help_text='Is business address same as personal address?')),
                ('business_street', models.CharField(blank=True, max_length=200)),
                ('business_city', models.CharField(blank=True, max_length=100)),
                ('business_region', models.CharField(blank=True, max_length=100)),
                ('business_postal_code', models.CharField(blank=True, max_length=20)),
                ('business_country', models.CharField(blank=True, default='CM', max_length=2)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='address', to='agents.agentprofile')),
            ],
            options={
                'verbose_name': 'Agent Address',
                'verbose_name_plural': 'Agent Addresses',
            },
        ),
        migrations.CreateModel(
            name='AgentAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('achievement_type', models.CharField(choices=[('award', 'Award'), ('recognition', 'Recognition'), ('milestone', 'Milestone'), ('certification', 'Certification')], max_length=15)),
                ('date_achieved', models.DateField()),
                ('issuing_organization', models.CharField(blank=True, max_length=100)),
                ('certificate_url', models.URLField(blank=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='agents.agentprofile')),
            ],
            options={
                'ordering': ['-date_achieved'],
            },
        ),
        migrations.CreateModel(
            name='AgentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('id_document', "ID Document (Passport/Driver's License/National ID)"), ('address_verification', 'Address Verification (Utility Bill/Bank Statement)'), ('taxpayer_card', 'Taxpayer Card'), ('selfie', 'Selfie Verification')], max_length=20)),
                ('file', models.FileField(upload_to='agent_documents/%Y/%m/')),
                ('original_filename', models.CharField(max_length=200)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('mime_type', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True, help_text='Additional notes about the document')),
                ('is_verified', models.BooleanField(default=False)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='agents_verified_documents', to=settings.AUTH_USER_MODEL)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='agents.agentprofile')),
            ],
            options={
                'ordering': ['-uploaded_at'],
                'unique_together': {('agent', 'document_type')},
            },
        ),
        migrations.CreateModel(
            name='AgentReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('title', models.CharField(max_length=100)),
                ('comment', models.TextField()),
                ('is_verified', models.BooleanField(default=False)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='agents.agentprofile')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('agent', 'reviewer')},
            },
        ),
        migrations.CreateModel(
            name='AgentSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='agents.agentprofile')),
            ],
            options={
                'ordering': ['day_of_week', 'start_time'],
                'unique_together': {('agent', 'day_of_week')},
            },
        ),
    ]
