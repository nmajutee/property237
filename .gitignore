# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Django specific
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
media/uploads/
staticfiles/
static_collected/

# If you are using PostgreSQL
*.sql

# If you are using MySQL
*.cnf

# Environment variables
.env
.env.local
.env.production
.env.staging
.env.development

# Docker
.dockerignore
docker-compose.override.yml

# IDE specific files
.vscode/
.idea/
*.swp
*.swo
*~

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini

# Linux
*~

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# Dependency directories
node_modules/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Temporary folders
tmp/
temp/

# Project specific
# Media files (uploaded by users)
backend/media/profile_pics/
backend/media/property_images/
backend/media/documents/
backend/media/uploads/

# Static files collected
backend/staticfiles/
backend/static_collected/

# Migration files (optional - comment out if you want to track migrations)
# */migrations/*.py
# !*/migrations/__init__.py

# Backup files
*.bak
*.backup

# Certificate files
*.pem
*.key
*.crt

# Local configuration
local_config.py
local_settings.py

# Redis dump
dump.rdb

# Elastic search
elasticsearch/

# Whoosh index
whoosh_index/
private/

# ============================================================================
# PROPERTY237 SPECIFIC IGNORES
# ============================================================================

# Development documentation (internal use only)
*_ANALYSIS.md
*_FIX*.md
*_COMPLETE.md
*_DEBUGGING.md
*_SUMMARY.md
FINAL_*.md
QUICK_*.md
TEST_*.md
UPGRADE_*.md

# Keep only these docs
!README.md
!API_REFERENCE.md

# Local backup files
.env.local.backup
*.backup

# Development logs
debug.log
error.log

# IDE and editor files
.vscode/settings.json
.idea/workspace.xml

# Test coverage
htmlcov/
.coverage
coverage.xml

# Mac specific
.DS_Store

# Python cache
__pycache__/
*.pyc
*.pyo

# Node modules
node_modules/

# Build artifacts
dist/
build/
*.egg-info/

# Media files (user uploads)
backend/media/property_images/
backend/media/profile_pics/
backend/media/documents/

# Static files
backend/staticfiles/
backend/static_collected/

# Database
*.sqlite3
db.sqlite3
*.db

# Logs
*.log
logs/

# Environment files
.env
.env.local
.env.*.local
