# Generated by Django 5.1.2 on 2025-10-06 13:56

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('properties', '0004_alter_propertytype_options_property_cadastral_id_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditPricing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('view_property', 'View Full Property Details'), ('list_property', 'List Property'), ('featured_listing', 'Featured Listing (per day)'), ('contact_reveal', 'Reveal Contact Information')], help_text='Action requiring credits', max_length=50, unique=True)),
                ('credits_required', models.DecimalField(decimal_places=2, help_text='Credits required for this action', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Credit Pricing',
                'verbose_name_plural': 'Credit Pricing Rules',
                'ordering': ['action'],
            },
        ),
        migrations.CreateModel(
            name='CreditPackage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Package name (e.g., Starter, Premium)', max_length=100)),
                ('credits', models.IntegerField(help_text='Base credits in package', validators=[django.core.validators.MinValueValidator(1)])),
                ('bonus_credits', models.IntegerField(default=0, help_text='Bonus credits added to package', validators=[django.core.validators.MinValueValidator(0)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(choices=[('XAF', 'Central African Franc'), ('USD', 'US Dollar'), ('EUR', 'Euro')], default='XAF', max_length=3)),
                ('is_popular', models.BooleanField(default=False, help_text='Mark as popular package')),
                ('is_active', models.BooleanField(default=True)),
                ('display_order', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Credit Package',
                'verbose_name_plural': 'Credit Packages',
                'ordering': ['display_order', 'price'],
                'indexes': [models.Index(fields=['is_active', 'display_order'], name='credits_cre_is_acti_e3cb91_idx')],
            },
        ),
        migrations.CreateModel(
            name='CreditTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Credit Purchase'), ('usage', 'Credit Usage'), ('refund', 'Refund'), ('bonus', 'Bonus Credits'), ('referral', 'Referral Reward'), ('admin_adjustment', 'Admin Adjustment')], max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Credit amount (positive for credit, negative for debit)', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('balance_before', models.DecimalField(decimal_places=2, max_digits=10)),
                ('balance_after', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField(blank=True)),
                ('reference_id', models.CharField(blank=True, help_text='External reference (payment ID, property ID, etc.)', max_length=255)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('payment_reference', models.CharField(blank=True, max_length=255)),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('payment_currency', models.CharField(blank=True, max_length=3)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('package', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='credits.creditpackage')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='credit_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Credit Transaction',
                'verbose_name_plural': 'Credit Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PropertyView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_views', to='properties.property')),
                ('transaction', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_views', to='credits.credittransaction')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_views', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Property View',
                'verbose_name_plural': 'Property Views',
            },
        ),
        migrations.CreateModel(
            name='CreditBalance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0, help_text='Current available credits', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_purchased', models.DecimalField(decimal_places=2, default=0, help_text='Total credits ever purchased', max_digits=10)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0, help_text='Total credits ever spent', max_digits=10)),
                ('total_earned', models.DecimalField(decimal_places=2, default=0, help_text='Total credits earned (bonuses, referrals, etc.)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_purchase_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='credit_balance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Credit Balance',
                'verbose_name_plural': 'Credit Balances',
                'indexes': [models.Index(fields=['user'], name='credits_cre_user_id_93f943_idx'), models.Index(fields=['balance'], name='credits_cre_balance_5a1d10_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='credittransaction',
            index=models.Index(fields=['user', '-created_at'], name='credits_cre_user_id_6943f8_idx'),
        ),
        migrations.AddIndex(
            model_name='credittransaction',
            index=models.Index(fields=['transaction_type', 'status'], name='credits_cre_transac_3bf5ad_idx'),
        ),
        migrations.AddIndex(
            model_name='credittransaction',
            index=models.Index(fields=['reference_id'], name='credits_cre_referen_6252b9_idx'),
        ),
        migrations.AddIndex(
            model_name='credittransaction',
            index=models.Index(fields=['payment_reference'], name='credits_cre_payment_12d7b4_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['user', 'property'], name='credits_pro_user_id_03a0be_idx'),
        ),
        migrations.AddIndex(
            model_name='propertyview',
            index=models.Index(fields=['-viewed_at'], name='credits_pro_viewed__6bdd13_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='propertyview',
            unique_together={('user', 'property')},
        ),
    ]
