# Generated by Django 5.2.4 on 2025-08-15 17:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("agentprofile", "0001_initial"),
        ("locations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="PropertyStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("pending", "Pending"),
                            ("sold", "Sold"),
                            ("rented", "Rented"),
                            ("withdrawn", "Withdrawn"),
                            ("under_offer", "Under Offer"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Property Statuses",
            },
        ),
        migrations.CreateModel(
            name="PropertyType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("chambre_modern", "Chambre Modern/Room"),
                            ("studio", "Studio"),
                            ("apartment", "Apartment"),
                            ("bungalow", "Bungalow"),
                            ("villa_duplex", "Villa/Duplex"),
                            ("commercial", "Commercial Property/Office/Shop"),
                            ("land", "Land"),
                            ("warehouse", "Warehouse"),
                            ("guest_house", "Guest House"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Property",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "listing_type",
                    models.CharField(
                        choices=[
                            ("rent", "For Rent"),
                            ("sale", "For Sale"),
                            ("guest_house", "Guest House"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "google_pin_location",
                    models.TextField(
                        blank=True, help_text="Google Maps pin drop coordinates"
                    ),
                ),
                (
                    "distance_from_main_road",
                    models.PositiveIntegerField(
                        blank=True, help_text="Distance in meters", null=True
                    ),
                ),
                ("road_is_tarred", models.BooleanField(default=False)),
                (
                    "vehicle_access",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("bike", "Reachable by Bike"),
                            ("low_car", "Reachable by Low Car/Sedan"),
                            ("suv", "Reachable by SUV"),
                        ],
                        help_text="Best vehicle access type",
                        max_length=20,
                    ),
                ),
                ("no_of_bedrooms", models.PositiveIntegerField(default=0)),
                (
                    "no_of_living_rooms",
                    models.PositiveIntegerField(
                        default=0, help_text="Number of parlours/living rooms"
                    ),
                ),
                ("no_of_bathrooms", models.PositiveIntegerField(default=1)),
                ("no_of_kitchens", models.PositiveIntegerField(default=1)),
                (
                    "kitchen_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("full_size", "Full Size Kitchen"),
                            ("partial", "Partial/Corner Kitchen"),
                        ],
                        max_length=15,
                    ),
                ),
                ("no_of_balconies", models.PositiveIntegerField(default=0)),
                ("no_of_floors", models.PositiveIntegerField(default=1)),
                (
                    "floor_number",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Which floor is the apartment on (for apartments)",
                        null=True,
                    ),
                ),
                (
                    "room_size",
                    models.CharField(
                        blank=True, help_text="e.g., '3m x 4m'", max_length=50
                    ),
                ),
                ("has_dressing_cupboard", models.BooleanField(default=False)),
                (
                    "electricity_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("private_meter", "Private Meter"),
                            ("shared_meter", "Shared Meter"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "electricity_payment",
                    models.CharField(
                        blank=True,
                        choices=[("prepaid", "Prepaid"), ("postpaid", "Postpaid")],
                        max_length=10,
                    ),
                ),
                (
                    "water_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("camwater", "Camwater"),
                            ("forage", "Forage/Borehole"),
                        ],
                        max_length=15,
                    ),
                ),
                ("has_ac_preinstalled", models.BooleanField(default=False)),
                ("has_hot_water", models.BooleanField(default=False)),
                ("has_generator", models.BooleanField(default=False)),
                (
                    "has_parking",
                    models.BooleanField(default=False, help_text="In-fence parking"),
                ),
                ("has_security", models.BooleanField(default=False)),
                ("has_pool", models.BooleanField(default=False)),
                ("has_gym", models.BooleanField(default=False)),
                ("has_elevator", models.BooleanField(default=False)),
                ("price", models.DecimalField(decimal_places=2, max_digits=12)),
                ("currency", models.CharField(default="XAF", max_length=3)),
                (
                    "initial_months_payable",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Number of months payable at entry",
                        null=True,
                    ),
                ),
                (
                    "caution_months",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Number of months as caution/deposit",
                        null=True,
                    ),
                ),
                (
                    "visit_fee",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Fee for property viewing",
                        max_digits=8,
                        null=True,
                    ),
                ),
                ("requires_contract_registration", models.BooleanField(default=False)),
                (
                    "land_size_sqm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Land size in square meters",
                        max_digits=10,
                        null=True,
                    ),
                ),
                ("has_land_title", models.BooleanField(default=False)),
                (
                    "land_title_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("global", "Global Land Title"),
                            ("extract", "Personal/Extract Land Title"),
                        ],
                        max_length=20,
                    ),
                ),
                ("other_documentation", models.TextField(blank=True)),
                (
                    "land_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("family_land", "Family Land"),
                            ("private_land", "Private Land"),
                            ("community_land", "Community Land"),
                            ("reclaimed_land", "Reclaimed Land"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "area_characteristics",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("swampy", "Swampy"),
                            ("dry", "Dry"),
                            ("forest_area", "Forest Area"),
                        ],
                        max_length=15,
                    ),
                ),
                (
                    "warehouse_height",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Height in meters",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("has_forklift", models.BooleanField(default=False)),
                ("allows_truck_entry", models.BooleanField(default=False)),
                ("has_inventory_manager", models.BooleanField(default=False)),
                ("requires_goods_documentation", models.BooleanField(default=False)),
                (
                    "price_per_day",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("price_negotiable", models.BooleanField(default=False)),
                ("has_refundable_caution", models.BooleanField(default=False)),
                (
                    "agent_commission_percentage",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Agent commission as percentage",
                        max_digits=5,
                        null=True,
                    ),
                ),
                (
                    "agent_commission_months",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Agent commission in months of rent",
                        null=True,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("slug", models.SlugField(blank=True, max_length=250, unique=True)),
                ("featured", models.BooleanField(default=False)),
                ("views_count", models.PositiveIntegerField(default=0)),
                (
                    "agent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="properties",
                        to="agentprofile.agentprofile",
                    ),
                ),
                (
                    "area",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to="locations.area"
                    ),
                ),
                (
                    "status",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="properties.propertystatus",
                    ),
                ),
                (
                    "property_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="properties.propertytype",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PropertyFeature",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("feature_name", models.CharField(max_length=100)),
                ("feature_value", models.CharField(blank=True, max_length=200)),
                ("is_highlighted", models.BooleanField(default=False)),
                (
                    "property_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="additional_features",
                        to="properties.property",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PropertyViewing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("scheduled_date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("scheduled", "Scheduled"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                            ("no_show", "No Show"),
                        ],
                        default="scheduled",
                        max_length=15,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                ("visit_fee_paid", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "property_listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="viewings",
                        to="properties.property",
                    ),
                ),
            ],
            options={
                "ordering": ["-scheduled_date"],
            },
        ),
    ]
