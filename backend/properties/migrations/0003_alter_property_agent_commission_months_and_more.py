# Generated by Django 5.2.4 on 2025-08-18 14:49

import django.core.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("agentprofile", "0002_initial"),
        ("locations", "0001_initial"),
        ("properties", "0002_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name="property",
            name="agent_commission_months",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Agent commission in months of rent (0-12)",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(12),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="agent_commission_percentage",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Agent commission as percentage (0-100%)",
                max_digits=5,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="caution_months",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Number of months as caution/deposit (0-12)",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(12),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="distance_from_main_road",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Distance in meters (max 50km)",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(50000),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="floor_number",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Which floor is the apartment on (for apartments)",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="initial_months_payable",
            field=models.PositiveIntegerField(
                blank=True,
                help_text="Number of months payable at entry (1-24)",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(24),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="land_size_sqm",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Land size in square meters",
                max_digits=10,
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="no_of_balconies",
            field=models.PositiveIntegerField(
                default=0, validators=[django.core.validators.MaxValueValidator(20)]
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="no_of_bathrooms",
            field=models.PositiveIntegerField(
                default=1,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(20),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="no_of_bedrooms",
            field=models.PositiveIntegerField(
                default=0, validators=[django.core.validators.MaxValueValidator(50)]
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="no_of_floors",
            field=models.PositiveIntegerField(
                default=1,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="no_of_kitchens",
            field=models.PositiveIntegerField(
                default=1,
                validators=[
                    django.core.validators.MinValueValidator(1),
                    django.core.validators.MaxValueValidator(10),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="no_of_living_rooms",
            field=models.PositiveIntegerField(
                default=0,
                help_text="Number of parlours/living rooms",
                validators=[django.core.validators.MaxValueValidator(20)],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="price",
            field=models.DecimalField(
                decimal_places=2,
                max_digits=12,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="price_per_day",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                max_digits=8,
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="visit_fee",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Fee for property viewing",
                max_digits=8,
                null=True,
                validators=[django.core.validators.MinValueValidator(0)],
            ),
        ),
        migrations.AlterField(
            model_name="property",
            name="warehouse_height",
            field=models.DecimalField(
                blank=True,
                decimal_places=2,
                help_text="Height in meters",
                max_digits=5,
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
        ),
        migrations.AlterUniqueTogether(
            name="propertyfeature",
            unique_together={("property_listing", "feature_name")},
        ),
        migrations.AlterUniqueTogether(
            name="propertyviewing",
            unique_together={("property_listing", "viewer", "scheduled_date")},
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["listing_type", "status"], name="properties__listing_3afcb1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["area", "listing_type"], name="properties__area_id_2df17e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(fields=["price"], name="properties__price_32e7c2_idx"),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["created_at"], name="properties__created_72ecc3_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="property",
            index=models.Index(
                fields=["featured"], name="properties__feature_008474_idx"
            ),
        ),
    ]
