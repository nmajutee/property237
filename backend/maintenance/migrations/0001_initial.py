# Generated by Django 5.0.8 on 2025-09-17 16:51

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('locations', '0001_initial'),
        ('properties', '0004_alter_propertytype_options_property_cadastral_id_and_more'),
        ('tenants', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MaintenanceCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('icon', models.CharField(blank=True, help_text='CSS icon class', max_length=50)),
                ('color', models.CharField(default='#007bff', help_text='Hex color code', max_length=7)),
                ('is_emergency', models.BooleanField(default=False)),
                ('estimated_completion_hours', models.PositiveIntegerField(default=24, help_text='Estimated hours to complete')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Maintenance Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('emergency', 'Emergency')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('acknowledged', 'Acknowledged'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='submitted', max_length=15)),
                ('location_details', models.CharField(blank=True, help_text="Specific location within property (e.g., 'Kitchen sink', 'Bedroom 1 window')", max_length=200)),
                ('requested_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('preferred_time', models.CharField(choices=[('morning', 'Morning (8AM-12PM)'), ('afternoon', 'Afternoon (12PM-5PM)'), ('evening', 'Evening (5PM-8PM)'), ('anytime', 'Anytime')], default='anytime', max_length=20)),
                ('scheduled_date', models.DateTimeField(blank=True, null=True)),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('currency', models.CharField(default='XAF', max_length=3)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approval_date', models.DateTimeField(blank=True, null=True)),
                ('approval_notes', models.TextField(blank=True)),
                ('tenant_notes', models.TextField(blank=True, help_text='Additional notes from tenant')),
                ('admin_notes', models.TextField(blank=True, help_text='Internal notes')),
                ('completion_notes', models.TextField(blank=True, help_text='Work completion summary')),
                ('tenant_rating', models.PositiveIntegerField(blank=True, help_text='Tenant satisfaction rating (1-5)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('tenant_feedback', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_maintenance', to=settings.AUTH_USER_MODEL)),
                ('assigned_to', models.ForeignKey(blank=True, help_text='Internal staff member assigned', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_maintenance', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maintenance.maintenancecategory')),
                ('landlord', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to=settings.AUTH_USER_MODEL)),
                ('related_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='properties.property')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_requests', to='tenants.tenantprofile')),
            ],
            options={
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='maintenance/images/')),
                ('image_type', models.CharField(choices=[('before', 'Before'), ('during', 'During Work'), ('after', 'After'), ('damage', 'Damage Documentation')], default='before', max_length=10)),
                ('caption', models.CharField(blank=True, max_length=200)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('maintenance_request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='maintenance.maintenancerequest')),
            ],
            options={
                'ordering': ['image_type', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('company_name', models.CharField(blank=True, max_length=100)),
                ('provider_type', models.CharField(choices=[('plumber', 'Plumber'), ('electrician', 'Electrician'), ('carpenter', 'Carpenter'), ('painter', 'Painter'), ('cleaner', 'Cleaner'), ('security', 'Security'), ('gardener', 'Gardener'), ('hvac', 'HVAC Technician'), ('general', 'General Maintenance'), ('contractor', 'Contractor')], max_length=20)),
                ('phone_number', models.CharField(max_length=17)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.TextField(blank=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('total_jobs', models.PositiveIntegerField(default=0)),
                ('completed_jobs', models.PositiveIntegerField(default=0)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('call_out_fee', models.DecimalField(decimal_places=2, default=0, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_emergency_available', models.BooleanField(default=False)),
                ('insurance_certificate', models.FileField(blank=True, null=True, upload_to='service_providers/insurance/')),
                ('license_document', models.FileField(blank=True, null=True, upload_to='service_providers/licenses/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('service_areas', models.ManyToManyField(blank=True, to='locations.area')),
            ],
            options={
                'ordering': ['-rating', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('frequency', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('semi_annual', 'Semi-Annual'), ('annual', 'Annual')], max_length=15)),
                ('next_due_date', models.DateField()),
                ('last_completed', models.DateField(blank=True, null=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='scheduled_maintenance', to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='maintenance.maintenancecategory')),
                ('related_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_schedules', to='properties.property')),
                ('service_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='maintenance.serviceprovider')),
            ],
            options={
                'ordering': ['next_due_date'],
            },
        ),
        migrations.AddField(
            model_name='maintenancerequest',
            name='service_provider',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_requests', to='maintenance.serviceprovider'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['status', 'priority'], name='maintenance_status_b5e015_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['related_property', 'status'], name='maintenance_related_9db62d_idx'),
        ),
        migrations.AddIndex(
            model_name='maintenancerequest',
            index=models.Index(fields=['tenant', 'status'], name='maintenance_tenant__96a86e_idx'),
        ),
    ]
