# Generated by Django 5.2.4 on 2025-08-15 17:53

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Currency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=3, unique=True)),
                ("name", models.CharField(max_length=50)),
                ("symbol", models.CharField(max_length=5)),
                (
                    "exchange_rate",
                    models.DecimalField(decimal_places=6, default=1.0, max_digits=12),
                ),
                ("is_base_currency", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name_plural": "Currencies",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="PaymentAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("bank_account", "Bank Account"),
                            ("paypal", "PayPal"),
                            ("stripe", "Stripe"),
                            ("wallet", "Digital Wallet"),
                            ("crypto", "Cryptocurrency"),
                        ],
                        max_length=20,
                    ),
                ),
                ("account_name", models.CharField(max_length=100)),
                ("account_number", models.CharField(max_length=100)),
                ("bank_name", models.CharField(blank=True, max_length=100)),
                ("bank_code", models.CharField(blank=True, max_length=20)),
                ("routing_number", models.CharField(blank=True, max_length=50)),
                ("swift_code", models.CharField(blank=True, max_length=20)),
                ("is_verified", models.BooleanField(default=False)),
                ("is_primary", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-is_primary", "account_name"],
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                ("code", models.CharField(max_length=20, unique=True)),
                ("description", models.TextField(blank=True)),
                ("is_online", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "processing_fee_percentage",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=5,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "fixed_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=8,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "min_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "max_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=12,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True, null=True, upload_to="payment_icons/"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Refund",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "refund_type",
                    models.CharField(
                        choices=[
                            ("full", "Full Refund"),
                            ("partial", "Partial Refund"),
                        ],
                        max_length=10,
                    ),
                ),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("requested", "Requested"),
                            ("approved", "Approved"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("rejected", "Rejected"),
                        ],
                        default="requested",
                        max_length=15,
                    ),
                ),
                ("processing_notes", models.TextField(blank=True)),
                ("gateway_refund_id", models.CharField(blank=True, max_length=100)),
                ("requested_at", models.DateTimeField(auto_now_add=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "ordering": ["-requested_at"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("transaction_id", models.CharField(max_length=50, unique=True)),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("ad_payment", "Advertisement Payment"),
                            ("subscription", "Subscription Payment"),
                            ("commission", "Commission Payment"),
                            ("refund", "Refund"),
                            ("deposit", "Security Deposit"),
                            ("withdrawal", "Withdrawal"),
                            ("penalty", "Penalty Fee"),
                            ("bonus", "Bonus Credit"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                            ("partially_refunded", "Partially Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=12,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "exchange_rate",
                    models.DecimalField(decimal_places=6, default=1.0, max_digits=12),
                ),
                (
                    "amount_usd",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "processing_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "platform_fee",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "gateway_transaction_id",
                    models.CharField(blank=True, max_length=100),
                ),
                ("gateway_response", models.JSONField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                ("notes", models.TextField(blank=True)),
                ("receipt_url", models.URLField(blank=True)),
                ("invoice_number", models.CharField(blank=True, max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "refunded_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("refund_reason", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WalletBalance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                (
                    "locked_balance",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=12),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["currency__code"],
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                ("subject", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=8),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("issue_date", models.DateField()),
                ("due_date", models.DateField()),
                ("paid_date", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=15,
                    ),
                ),
                (
                    "pdf_file",
                    models.FileField(blank=True, null=True, upload_to="invoices/"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "currency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="payment.currency",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
